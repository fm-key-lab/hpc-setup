version: '3'

includes:
  group-installs: ../utils/GroupInstalls.yml

tasks:
  install:
    desc: Install vg
    summary: |
      Install vg

        tools for working with genome variation graphs

      Variation graphs provide a succinct encoding of the sequences of many 
      genomes. A variation graph (in particular as implemented in vg) is 
      composed of:

        - nodes, which are labeled by sequences and ids
        - edges, which connect two nodes via either of their respective ends
        - paths, describe genomes, sequence alignments, and annotations (such as 
          gene models and transcripts) as walks through nodes connected by edges
      
      This model is similar to sequence graphs that have been used in assembly 
      and multiple sequence alignment.

      Paths provide coordinate systems relative to genomes encoded in the 
      graph, allowing stable mappings to be produced even if the structure of 
      the graph is changed. The variation graph model makes this embedding 
      explicit and essential. Tools in vg maintain paths as immutable during 
      transformations of the graph. They use paths to project graph-relative 
      data into reference-relative coordinate spaces. Paths provide stable 
      coordinates for graphs built in different ways from the same input sequences.

      URLs
        - [GitHub](https://github.com/vgteam/vg)
    vars:
      VERSION: '{{.VERSION | default "1.60.0"}}'
    cmds:
      - task: download-prebuilt
        vars:
          VERSION: '{{.VERSION}}'
      - task: test
        vars:
          DIR: '{{.OPT_DIR}}/vg/{{.VERSION}}'
      - task: group-installs:complete
        vars:
          APP: vg
          EXE: vg
          RELPATH_EXE: /
          VERSION: '{{.VERSION}}'

  download-prebuilt:
    vars:
      DIR: '{{.OPT_DIR}}/vg/{{.VERSION}}'
      URL: 'https://github.com/vgteam/vg/releases/download/v1.60.0/vg'
    dir: '{{.DIR}}'
    prompt: Download vg to {{.DIR}}?
    cmds:
      - wget {{.URL}}
      - chmod +x vg
    requires:
      vars: [OPT_DIR, VERSION]
    generates:
      - ./vg
    status:
      - test -f ./vg

  test: cd {{.DIR}} && ./vg version