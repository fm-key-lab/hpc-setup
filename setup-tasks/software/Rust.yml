version: '3'

includes:
  group_install: ../utils/GroupInstallTasks.yml

tasks:
  install:
    desc: Install Rust
    summary: |
      Install Rust compiler

      Notes
      -----
      # To get started you need Cargo's bin directory 
      # ({{.DIR}}/bin) in your PATH
      # environment variable. This has not been done automatically.

      # To configure your current shell, you need to source
      # the corresponding env file under {{.DIR}}.

      # This is usually done by running one of the following (note the leading DOT):
      # . "{{.DIR}}/env"            # For 
      # sh/bash/zsh/ash/dash/pdksh
      # source "{{.DIR}}/env.fish"  # For fish

      URLs
      ----
       - https://www.rust-lang.org/tools/install
    cmds:
      - task: using-rustup
        vars:
          VERSION: '{{.VERSION}}'
      - task: group_install:complete
        vars:
          APP: '{{.APP}}'
          VERSION: '{{.VERSION}}'
          RELPATH_EXE: /bin/
          EXE: rustc rustup cargo
    vars:
      APP: rust
      VERSION: '{{.VERSION | default "1.81.0"}}'

  using-rustup:
    dir: '{{.DIR}}'
    prompt: Install in {{.DIR}}?
    cmds:
      # - echo $CARGO_HOME $RUSTUP_HOME # NOTE: for troubleshooting
      - mkdir -p bin
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --no-modify-path -y
    vars:
      GROUP_HOME:
        sh: echo $GROUP_HOME
      DIR: '{{.GROUP_HOME}}/opt/rust/{{.VERSION}}'
    requires:
      vars: [VERSION]
    env:
      # Will look for a `bin` directory in these locations; when the environment 
      # variables do not look like absolute paths (e.g., $HOME/rust), then the 
      # executables are placed in {{.DIR}}/$CARGO_HOME, {{.DIR}}/$RUSTUP_HOME
      #
      # However, if no value or '' is provided, will default to $HOME/.cargo/bin
      CARGO_HOME: '{{.DIR}}'
      RUSTUP_HOME: '{{.DIR}}'
    status:
      - test -f {{.DIR}}/bin/rustc
      - test -f {{.DIR}}/bin/cargo